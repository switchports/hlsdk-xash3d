#include "switch_defs.h"
#include "extdll.h"
#include "util.h"
#include "cbase.h"

extern "C"
{

void GiveFnptrsToDll( enginefuncs_t *pengfuncsFromEngine, globalvars_t *pGlobals );
int GetEntityAPI( DLL_FUNCTIONS *pFunctionTable, int interfaceVersion );
int GetEntityAPI2( DLL_FUNCTIONS *pFunctionTable, int *interfaceVersion );
int Server_GetPhysicsInterface( int iVersion, server_physics_api_t *pfuncsFromEngine, physics_interface_t *pFunctionTable );

// Autogenerated functions
void env_shake( entvars_t *pev );
void item_rockets( entvars_t *pev );
void item_rune3( entvars_t *pev );
void item_rune4( entvars_t *pev );
void func_rot_button( entvars_t *pev );
void game_team_master( entvars_t *pev );
void trigger( entvars_t *pev );
void teledeath( entvars_t *pev );
void DelayedUse( entvars_t *pev );
void gibshooter( entvars_t *pev );
void env_explosion( entvars_t *pev );
void speaker( entvars_t *pev );
void env_fog( entvars_t *pev );
void info_landmark( entvars_t *pev );
void trigger_teleport( entvars_t *pev );
void weapon_lightning( entvars_t *pev );
void trigger_hurt( entvars_t *pev );
void func_wall_toggle( entvars_t *pev );
void button_target( entvars_t *pev );
void env_global( entvars_t *pev );
void trigger_once( entvars_t *pev );
void env_sprite( entvars_t *pev );
void item_shells( entvars_t *pev );
void bodyque( entvars_t *pev );
void multisource( entvars_t *pev );
void trigger_gravity( entvars_t *pev );
void func_illusionary( entvars_t *pev );
void item_health( entvars_t *pev );
void env_funnel( entvars_t *pev );
void item_flag_team2( entvars_t *pev );
void func_tracktrain( entvars_t *pev );
void env_sound( entvars_t *pev );
void game_end( entvars_t *pev );
void env_bubbles( entvars_t *pev );
void item_artifact_invisibility( entvars_t *pev );
void func_trackautochange( entvars_t *pev );
void env_message( entvars_t *pev );
void func_pushable( entvars_t *pev );
void game_player_team( entvars_t *pev );
void env_spark( entvars_t *pev );
void game_zone_player( entvars_t *pev );
void path_corner( entvars_t *pev );
void func_rotating( entvars_t *pev );
void ambient_suck_wind( entvars_t *pev );
void item_cells( entvars_t *pev );
void func_guntarget( entvars_t *pev );
void trigger_changelevel( entvars_t *pev );
void env_fade( entvars_t *pev );
void player( entvars_t *pev );
void trigger_camera( entvars_t *pev );
void trigger_autosave( entvars_t *pev );
void game_counter_set( entvars_t *pev );
void game_counter( entvars_t *pev );
void func_door( entvars_t *pev );
void func_conveyor( entvars_t *pev );
void player_loadsaved( entvars_t *pev );
void game_player_hurt( entvars_t *pev );
void quake_nail( entvars_t *pev );
void ambient_generic( entvars_t *pev );
void trigger_env_hurt( entvars_t *pev );
void func_platrot( entvars_t *pev );
void func_monsterclip( entvars_t *pev );
void game_score( entvars_t *pev );
void trigger_endsection( entvars_t *pev );
void weapon_nailgun( entvars_t *pev );
void func_wall( entvars_t *pev );
void func_door_rotating( entvars_t *pev );
void func_pendulum( entvars_t *pev );
void func_friction( entvars_t *pev );
void hook( entvars_t *pev );
void trigger_monsterjump( entvars_t *pev );
void info_player_team1( entvars_t *pev );
void env_laser( entvars_t *pev );
void light_spot( entvars_t *pev );
void env_glow( entvars_t *pev );
void func_water( entvars_t *pev );
void trigger_counter( entvars_t *pev );
void func_plat( entvars_t *pev );
void func_button( entvars_t *pev );
void item_flag_team1( entvars_t *pev );
void carried_flag_team1( entvars_t *pev );
void carried_flag_team2( entvars_t *pev );
void item_backpack( entvars_t *pev );
void weapon_rocketlauncher( entvars_t *pev );
void light( entvars_t *pev );
void info_player_team2( entvars_t *pev );
void trigger_auto( entvars_t *pev );
void infodecal( entvars_t *pev );
void item_armor2( entvars_t *pev );
void momentary_door( entvars_t *pev );
void ctf_redspawn( entvars_t *pev );
void env_debris( entvars_t *pev );
void momentary_rot_button( entvars_t *pev );
void info_intermission( entvars_t *pev );
void trigger_relay( entvars_t *pev );
void multi_manager( entvars_t *pev );
void item_armor3( entvars_t *pev );
void item_spikes( entvars_t *pev );
void path_track( entvars_t *pev );
void trigger_push( entvars_t *pev );
void ambient_drip( entvars_t *pev );
void quake_rocket( entvars_t *pev );
void item_armorInv( entvars_t *pev );
void func_train( entvars_t *pev );
void worldspawn( entvars_t *pev );
void weapon_supershotgun( entvars_t *pev );
void target_cdaudio( entvars_t *pev );
void fireanddie( entvars_t *pev );
void game_text( entvars_t *pev );
void item_rune1( entvars_t *pev );
void env_blood( entvars_t *pev );
void item_armor1( entvars_t *pev );
void ctf_redflag( entvars_t *pev );
void item_rune2( entvars_t *pev );
void weapon_supernailgun( entvars_t *pev );
void spark_shower( entvars_t *pev );
void env_beverage( entvars_t *pev );
void info_player_deathmatch( entvars_t *pev );
void env_shooter( entvars_t *pev );
void game_player_equip( entvars_t *pev );
void info_null( entvars_t *pev );
void trigger_changetarget( entvars_t *pev );
void env_lightning( entvars_t *pev );
void item_artifact_super_damage( entvars_t *pev );
void player_weaponstrip( entvars_t *pev );
void func_ladder( entvars_t *pev );
void weapon_quakegun( entvars_t *pev );
void beam( entvars_t *pev );
void trigger_transition( entvars_t *pev );
void item_artifact_invulnerability( entvars_t *pev );
void env_render( entvars_t *pev );
void item_artifact_envirosuit( entvars_t *pev );
void ctf_blueflag( entvars_t *pev );
void game_team_set( entvars_t *pev );
void trigger_cdaudio( entvars_t *pev );
void func_traincontrols( entvars_t *pev );
void item_sodacan( entvars_t *pev );
void test_effect( entvars_t *pev );
void func_breakable( entvars_t *pev );
void trigger_multiple( entvars_t *pev );
void func_trackchange( entvars_t *pev );
void ctf_bluespawn( entvars_t *pev );
void item_weapon( entvars_t *pev );
void info_target( entvars_t *pev );
void light_environment( entvars_t *pev );
void info_player_start( entvars_t *pev );
void info_teleport_destination( entvars_t *pev );
void monster_hevsuit_dead( entvars_t *pev );
void env_beam( entvars_t *pev );
void weaponbox( entvars_t *pev );


dllexport_t switch_server_exports[] = {
	{ "GiveFnptrsToDll", (void*)GiveFnptrsToDll },
	{ "GetEntityAPI", (void*)GetEntityAPI },
	{ "GetEntityAPI2", (void*)GetEntityAPI2 },
	{ "Server_GetPhysicsInterface", (void*)Server_GetPhysicsInterface },
	
	// Autogenerated exports
	{ "env_shake", (void*)env_shake },
	{ "item_rockets", (void*)item_rockets },
	{ "item_rune3", (void*)item_rune3 },
	{ "item_rune4", (void*)item_rune4 },
	{ "func_rot_button", (void*)func_rot_button },
	{ "game_team_master", (void*)game_team_master },
	{ "trigger", (void*)trigger },
	{ "teledeath", (void*)teledeath },
	{ "DelayedUse", (void*)DelayedUse },
	{ "gibshooter", (void*)gibshooter },
	{ "env_explosion", (void*)env_explosion },
	{ "speaker", (void*)speaker },
	{ "env_fog", (void*)env_fog },
	{ "info_landmark", (void*)info_landmark },
	{ "trigger_teleport", (void*)trigger_teleport },
	{ "weapon_lightning", (void*)weapon_lightning },
	{ "trigger_hurt", (void*)trigger_hurt },
	{ "func_wall_toggle", (void*)func_wall_toggle },
	{ "button_target", (void*)button_target },
	{ "env_global", (void*)env_global },
	{ "trigger_once", (void*)trigger_once },
	{ "env_sprite", (void*)env_sprite },
	{ "item_shells", (void*)item_shells },
	{ "bodyque", (void*)bodyque },
	{ "multisource", (void*)multisource },
	{ "trigger_gravity", (void*)trigger_gravity },
	{ "func_illusionary", (void*)func_illusionary },
	{ "item_health", (void*)item_health },
	{ "env_funnel", (void*)env_funnel },
	{ "item_flag_team2", (void*)item_flag_team2 },
	{ "func_tracktrain", (void*)func_tracktrain },
	{ "env_sound", (void*)env_sound },
	{ "game_end", (void*)game_end },
	{ "env_bubbles", (void*)env_bubbles },
	{ "item_artifact_invisibility", (void*)item_artifact_invisibility },
	{ "func_trackautochange", (void*)func_trackautochange },
	{ "env_message", (void*)env_message },
	{ "func_pushable", (void*)func_pushable },
	{ "game_player_team", (void*)game_player_team },
	{ "env_spark", (void*)env_spark },
	{ "game_zone_player", (void*)game_zone_player },
	{ "path_corner", (void*)path_corner },
	{ "func_rotating", (void*)func_rotating },
	{ "ambient_suck_wind", (void*)ambient_suck_wind },
	{ "item_cells", (void*)item_cells },
	{ "func_guntarget", (void*)func_guntarget },
	{ "trigger_changelevel", (void*)trigger_changelevel },
	{ "env_fade", (void*)env_fade },
	{ "player", (void*)player },
	{ "trigger_camera", (void*)trigger_camera },
	{ "trigger_autosave", (void*)trigger_autosave },
	{ "game_counter_set", (void*)game_counter_set },
	{ "game_counter", (void*)game_counter },
	{ "func_door", (void*)func_door },
	{ "func_conveyor", (void*)func_conveyor },
	{ "player_loadsaved", (void*)player_loadsaved },
	{ "game_player_hurt", (void*)game_player_hurt },
	{ "quake_nail", (void*)quake_nail },
	{ "ambient_generic", (void*)ambient_generic },
	{ "trigger_env_hurt", (void*)trigger_env_hurt },
	{ "func_platrot", (void*)func_platrot },
	{ "func_monsterclip", (void*)func_monsterclip },
	{ "game_score", (void*)game_score },
	{ "trigger_endsection", (void*)trigger_endsection },
	{ "weapon_nailgun", (void*)weapon_nailgun },
	{ "func_wall", (void*)func_wall },
	{ "func_door_rotating", (void*)func_door_rotating },
	{ "func_pendulum", (void*)func_pendulum },
	{ "func_friction", (void*)func_friction },
	{ "hook", (void*)hook },
	{ "trigger_monsterjump", (void*)trigger_monsterjump },
	{ "info_player_team1", (void*)info_player_team1 },
	{ "env_laser", (void*)env_laser },
	{ "light_spot", (void*)light_spot },
	{ "env_glow", (void*)env_glow },
	{ "func_water", (void*)func_water },
	{ "trigger_counter", (void*)trigger_counter },
	{ "func_plat", (void*)func_plat },
	{ "func_button", (void*)func_button },
	{ "item_flag_team1", (void*)item_flag_team1 },
	{ "carried_flag_team1", (void*)carried_flag_team1 },
	{ "carried_flag_team2", (void*)carried_flag_team2 },
	{ "item_backpack", (void*)item_backpack },
	{ "weapon_rocketlauncher", (void*)weapon_rocketlauncher },
	{ "light", (void*)light },
	{ "info_player_team2", (void*)info_player_team2 },
	{ "trigger_auto", (void*)trigger_auto },
	{ "infodecal", (void*)infodecal },
	{ "item_armor2", (void*)item_armor2 },
	{ "momentary_door", (void*)momentary_door },
	{ "ctf_redspawn", (void*)ctf_redspawn },
	{ "env_debris", (void*)env_debris },
	{ "momentary_rot_button", (void*)momentary_rot_button },
	{ "info_intermission", (void*)info_intermission },
	{ "trigger_relay", (void*)trigger_relay },
	{ "multi_manager", (void*)multi_manager },
	{ "item_armor3", (void*)item_armor3 },
	{ "item_spikes", (void*)item_spikes },
	{ "path_track", (void*)path_track },
	{ "trigger_push", (void*)trigger_push },
	{ "ambient_drip", (void*)ambient_drip },
	{ "quake_rocket", (void*)quake_rocket },
	{ "item_armorInv", (void*)item_armorInv },
	{ "func_train", (void*)func_train },
	{ "worldspawn", (void*)worldspawn },
	{ "weapon_supershotgun", (void*)weapon_supershotgun },
	{ "target_cdaudio", (void*)target_cdaudio },
	{ "fireanddie", (void*)fireanddie },
	{ "game_text", (void*)game_text },
	{ "item_rune1", (void*)item_rune1 },
	{ "env_blood", (void*)env_blood },
	{ "item_armor1", (void*)item_armor1 },
	{ "ctf_redflag", (void*)ctf_redflag },
	{ "item_rune2", (void*)item_rune2 },
	{ "weapon_supernailgun", (void*)weapon_supernailgun },
	{ "spark_shower", (void*)spark_shower },
	{ "env_beverage", (void*)env_beverage },
	{ "info_player_deathmatch", (void*)info_player_deathmatch },
	{ "env_shooter", (void*)env_shooter },
	{ "game_player_equip", (void*)game_player_equip },
	{ "info_null", (void*)info_null },
	{ "trigger_changetarget", (void*)trigger_changetarget },
	{ "env_lightning", (void*)env_lightning },
	{ "item_artifact_super_damage", (void*)item_artifact_super_damage },
	{ "player_weaponstrip", (void*)player_weaponstrip },
	{ "func_ladder", (void*)func_ladder },
	{ "weapon_quakegun", (void*)weapon_quakegun },
	{ "beam", (void*)beam },
	{ "trigger_transition", (void*)trigger_transition },
	{ "item_artifact_invulnerability", (void*)item_artifact_invulnerability },
	{ "env_render", (void*)env_render },
	{ "item_artifact_envirosuit", (void*)item_artifact_envirosuit },
	{ "ctf_blueflag", (void*)ctf_blueflag },
	{ "game_team_set", (void*)game_team_set },
	{ "trigger_cdaudio", (void*)trigger_cdaudio },
	{ "func_traincontrols", (void*)func_traincontrols },
	{ "item_sodacan", (void*)item_sodacan },
	{ "test_effect", (void*)test_effect },
	{ "func_breakable", (void*)func_breakable },
	{ "trigger_multiple", (void*)trigger_multiple },
	{ "func_trackchange", (void*)func_trackchange },
	{ "ctf_bluespawn", (void*)ctf_bluespawn },
	{ "item_weapon", (void*)item_weapon },
	{ "info_target", (void*)info_target },
	{ "light_environment", (void*)light_environment },
	{ "info_player_start", (void*)info_player_start },
	{ "info_teleport_destination", (void*)info_teleport_destination },
	{ "monster_hevsuit_dead", (void*)monster_hevsuit_dead },
	{ "env_beam", (void*)env_beam },
	{ "weaponbox", (void*)weaponbox },

	{ NULL, NULL },
};

int switch_installdll_server( void )
{
	return dll_register( "server", switch_server_exports );
}

}